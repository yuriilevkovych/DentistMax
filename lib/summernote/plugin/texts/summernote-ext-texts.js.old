(function (factory) {
  /* global define */
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['jquery'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // Node/CommonJS
    module.exports = factory(require('jquery'));
  } else {
    // Browser globals
    factory(window.jQuery);
  }
}(function ($) {
  $.extend($.summernote.options, {
    template: {
      list: []
    }
  });
  $.extend(true, $.summernote.lang, {
    'en-US': {
      htexts: {
        title: 'Texts',
        label: 'Help texts'
      }
    },
    'sk-SK': {
      htexts: {
        title: 'Texty',
        label: 'Pomocné texty'
      }
    },
    'cs-CZ': {
      htexts: {
        title: 'Texty',
        label: 'Pomocní texty'
      }
    }
  });

  // Extends plugins for adding templates.
  //  - plugin is external module for customizing.
  $.extend($.summernote.plugins, {
    /**
     * @param {Object} context - context object has status of editor.
     */
    'htexts': function (context) {
      // ui has renders to build ui elements.
      //  - you can create a button with `ui.button`
      var ui      = $.summernote.ui;
      var $editor = context.layoutInfo.editor;
      var options = context.options.template;
      var lang    = context.options.langInfo;
      var defaultOptions = {
        label: lang.htexts.title,
        tooltip: lang.htexts.label
      };

      // Assign default values if not supplied
      for (var propertyName in defaultOptions) {
        if (options.hasOwnProperty(propertyName) === false) {
          options[propertyName] = defaultOptions[propertyName];
        }
      }

      // add hello button
      context.memo('button.htexts', function () {
        // create button
        options.list = '';
        $.ajaxSetup({
          async: false
        });
        $.get('?do=HelpTexts').done(function(data){
            for (var i = 0; i < data.length; i++) {
              options.list += '<li><a href="#" data-value="' + data[i].value + '">' + data[i].content + '</a></li>';
            }
        });
        var button = ui.buttonGroup([
          ui.button({
            className: 'dropdown-toggle',
            contents: '<span class="template"/> ' + options.label + ' <span class="caret"></span>',
            tooltip: options.tooltip,
            data: {
              toggle: 'dropdown'
            }
          }),
          ui.dropdown({
            className: 'dropdown-template',
            items: options.list,
            click: function (event) {
              event.preventDefault();

              var $button = $(event.target);
              var value   = $button.data('value');
              $.get('?do=HelpTexts&id='+value).done(function(data){
                  var node = document.createElement('div');
                  node.innerHTML = data;
                  context.invoke('insertNode', node);
              });
            }
          })
        ]);

        // create jQuery object from button instance.
        return button.render();
      });
    }
  });
}));